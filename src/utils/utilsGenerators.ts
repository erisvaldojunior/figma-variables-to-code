/**
 * Generates the Dart utility function for `figma_utils.dart`.
 * @returns The generated Dart code as a string.
 */
export function generateUtilsDartCode(): string {
    let dartFile = `// WARNING: This file is auto-generated by the figma-variables-to-code plugin.\n`;
    dartFile += `// DO NOT manually modify this file. Any manual changes will be overwritten\n`;
    dartFile += `// during the next generation process.\n\n`;
    dartFile += `import 'dart:ui';\n\n`;
  
    dartFile += `FontWeight getFontWeight(String weight) {\n`;
    dartFile += `  switch (weight.toLowerCase()) {\n`;
    dartFile += `    case 'w900':\n`;
    dartFile += `    case 'black':\n`;
    dartFile += `      return FontWeight.w900;\n`;
    dartFile += `    case 'w800':\n`;
    dartFile += `    case 'extrabold':\n`;
    dartFile += `    case 'extra-bold':\n`;
    dartFile += `      return FontWeight.w800;\n`;
    dartFile += `    case 'w700':\n`;
    dartFile += `    case 'bold':\n`;
    dartFile += `      return FontWeight.bold;\n`;
    dartFile += `    case 'w600':\n`;
    dartFile += `    case 'semibold':\n`;
    dartFile += `    case 'semi-bold':\n`;
    dartFile += `      return FontWeight.w600;\n`;
    dartFile += `    case 'w500':\n`;
    dartFile += `    case 'medium':\n`;
    dartFile += `      return FontWeight.w500;\n`;
    dartFile += `    case 'w400':\n`;
    dartFile += `      return FontWeight.w400;\n`;
    dartFile += `    case 'w300':\n`;
    dartFile += `    case 'light':\n`;
    dartFile += `      return FontWeight.w300;\n`;
    dartFile += `    case 'w200':\n`;
    dartFile += `    case 'extralight':\n`;
    dartFile += `    case 'extra-light':\n`;
    dartFile += `      return FontWeight.w200;\n`;
    dartFile += `    case 'w100':\n`;
    dartFile += `    case 'thin':\n`;
    dartFile += `      return FontWeight.w100;\n`;
    dartFile += `    default:\n`; // normal, regular, plain
    dartFile += `      return FontWeight.normal;\n`;
    dartFile += `  }\n`;
    dartFile += `}\n`;
  
    return dartFile;
  }