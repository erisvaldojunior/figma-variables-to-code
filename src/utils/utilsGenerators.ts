/**
 * Generates the Dart utility file `figma_utils.dart`.
 * @returns The generated Dart file as a string.
 */
export function generateUtilsFile(): string {
  let dartFile = generateHeaderComment();
  dartFile += generateDartUiImport();
  dartFile += '\n';
  dartFile += generateFontWeightFunction();
  dartFile += '\n';
  dartFile += generateHeightFunction();
  return dartFile;
}

/**
 * Generates the header comment for the Dart file.
 * @returns The header comment as a string.
 */
export function generateHeaderComment(): string {
  return `// WARNING: This file is auto-generated by the figma-variables-to-code plugin.\n` +
         `// DO NOT manually modify this file. Any manual changes will be overwritten\n` +
         `// during the next generation process.\n`;
}

/**
 * Generates dart:ui import.
 * @returns The import line as a string.
 */
export function generateDartUiImport(): string {
  return `import 'dart:ui';\n`  
}

/**
 * Generates the Dart function `getFontWeight` for mapping font weights.
 * @returns The Dart function `getFontWeight` as a string.
 */
function generateFontWeightFunction(): string {
  return `FontWeight getFontWeight(String weight) {\n` +
         `  switch (weight.toLowerCase()) {\n` +
         `    case 'w900':\n` +
         `    case 'black':\n` +
         `      return FontWeight.w900;\n` +
         `    case 'w800':\n` +
         `    case 'extrabold':\n` +
         `    case 'extra-bold':\n` +
         `      return FontWeight.w800;\n` +
         `    case 'w700':\n` +
         `    case 'bold':\n` +
         `      return FontWeight.bold;\n` +
         `    case 'w600':\n` +
         `    case 'semibold':\n` +
         `    case 'semi-bold':\n` +
         `      return FontWeight.w600;\n` +
         `    case 'w500':\n` +
         `    case 'medium':\n` +
         `      return FontWeight.w500;\n` +
         `    case 'w400':\n` +
         `      return FontWeight.w400;\n` +
         `    case 'w300':\n` +
         `    case 'light':\n` +
         `      return FontWeight.w300;\n` +
         `    case 'w200':\n` +
         `    case 'extralight':\n` +
         `    case 'extra-light':\n` +
         `      return FontWeight.w200;\n` +
         `    case 'w100':\n` +
         `    case 'thin':\n` +
         `      return FontWeight.w100;\n` +
         `    default:\n` + // normal, regular, plain
         `      return FontWeight.normal;\n` +
         `  }\n` +
         `}\n`;
}

/**
 * Generates the Dart function `getHeight` for calculating the text height.
 * @returns The Dart function `getHeight` as a string.
 */
function generateHeightFunction(): string {
  return `/// Calculates the height property to be used within TextStyle.\n` +
         `/// It returns the ratio between lineHeight and fontSize.\n` +
         `double getHeight(double lineHeight, double fontSize) {\n` +
         `  return lineHeight / fontSize;\n` +
         `}\n`;
}